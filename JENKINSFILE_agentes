pipeline {
    agent any

    stages {
        stage('Get Code') {
            agent any
            steps {
                bat 'whoami'
                bat 'hostname'
                echo 'Inicio de la clonación del código fuente!!!'
                git 'https://github.com/AlbertoCrisostomo/helloworld_CP_1B.git'

                bat 'set PYTHONPATH=%WORKSPACE%'
                stash includes: 'app/**', name: 'd_app'
                stash includes: 'test/**', name: 'd_test'
            }
        }

        stage('Coverage & Unit') {
            agent {
                label 'test_unit'
            }
            stages {
                stage('Coverage') {
                    steps {
                        echo 'Inicio de las pruebas Coverage!!!'
                        unstash 'd_app'
                        unstash 'd_test'
                        bat '''
                            set PYTHONPATH=%WORKSPACE%
                            coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest --junitxml=result-unit.xml test\\unit
                            coverage xml
                        '''
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            cobertura coberturaReportFile: 'coverage.xml', onlyStable: false, failUnstable: false, conditionalCoverageTargets: '100,80,90', lineCoverageTargets: '100,85,95'
                        }
                    }
                }

                stage('Unit') {
                    steps {
                        echo 'Inicio de las pruebas Unit!!!'             
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                            bat '''
                                set PATH=C:\\Python312;C:\\Python312\\Scripts;
                                set PYTHONPATH=%WORKSPACE%
                                pytest --junitxml=result-unit.xml test\\unit
                            '''
                            junit 'result-unit.xml'
                        }
                    }
                }
            }
        }

        
    }
}
